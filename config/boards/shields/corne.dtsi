/*
 * Copyright (c) 2020 Pete Johanson
 *
 * SPDX-License-Identifier: MIT
 */
#include <input/processors.dtsi>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/input_transform.h>
#include <behaviors/input_processor_gestures.dtsi>
#include <behaviors/input_processor_absolute_to_relative.dtsi>

#include <layouts/foostan/corne/5column.dtsi>
#include <layouts/foostan/corne/6column.dtsi>

&foostan_corne_6col_layout {
    transform = <&default_transform>;
};

&foostan_corne_5col_layout {
    transform = <&five_column_transform>;
};

/ {
    chosen {
        zephyr,display = &oled;
        zmk,kscan = &kscan0;
        zmk,physical-layout = &foostan_corne_6col_layout;
    };

    default_transform: keymap_transform_0 {
        compatible = "zmk,matrix-transform";
        columns = <12>;
        rows = <4>;
// | SW1  | SW2  | SW3  | SW4  | SW5  | SW6  |   | SW6  | SW5  | SW4  | SW3  | SW2  | SW1  |
// | SW7  | SW8  | SW9  | SW10 | SW11 | SW12 |   | SW12 | SW11 | SW10 | SW9  | SW8  | SW7  |
// | SW13 | SW14 | SW15 | SW16 | SW17 | SW18 |   | SW18 | SW17 | SW16 | SW15 | SW14 | SW13 |
//                      | SW19 | SW20 | SW21 |   | SW21 | SW20 | SW19 |
        map = <
RC(0,0) RC(0,1) RC(0,2) RC(0,3) RC(0,4) RC(0,5)  RC(0,6) RC(0,7) RC(0,8) RC(0,9) RC(0,10) RC(0,11)
RC(1,0) RC(1,1) RC(1,2) RC(1,3) RC(1,4) RC(1,5)  RC(1,6) RC(1,7) RC(1,8) RC(1,9) RC(1,10) RC(1,11)
RC(2,0) RC(2,1) RC(2,2) RC(2,3) RC(2,4) RC(2,5)  RC(2,6) RC(2,7) RC(2,8) RC(2,9) RC(2,10) RC(2,11)
                        RC(3,3) RC(3,4) RC(3,5)  RC(3,6) RC(3,7) RC(3,8)
        >;
    };

    five_column_transform: keymap_transform_1 {
        compatible = "zmk,matrix-transform";
        columns = <10>;
        rows = <4>;
// | SW2  | SW3  | SW4  | SW5  | SW6  |   | SW6  | SW5  | SW4  | SW3  | SW2  |
// | SW8  | SW9  | SW10 | SW11 | SW12 |   | SW12 | SW11 | SW10 | SW9  | SW8  |
// | SW14 | SW15 | SW16 | SW17 | SW18 |   | SW18 | SW17 | SW16 | SW15 | SW14 |
//               | SW19 | SW20 | SW21 |   | SW21 | SW20 | SW19 |
        map = <
RC(0,1) RC(0,2) RC(0,3) RC(0,4) RC(0,5)  RC(0,6) RC(0,7) RC(0,8) RC(0,9) RC(0,10)
RC(1,1) RC(1,2) RC(1,3) RC(1,4) RC(1,5)  RC(1,6) RC(1,7) RC(1,8) RC(1,9) RC(1,10)
RC(2,1) RC(2,2) RC(2,3) RC(2,4) RC(2,5)  RC(2,6) RC(2,7) RC(2,8) RC(2,9) RC(2,10)
                        RC(3,3) RC(3,4) RC(3,5)  RC(3,6) RC(3,7) RC(3,8)
        >;
    };

    kscan0: kscan {
        compatible = "zmk,kscan-gpio-matrix";
        wakeup-source;

        diode-direction = "col2row";
        row-gpios
            = <&pro_micro 4 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
            , <&pro_micro 5 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
            , <&pro_micro 6 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
            , <&pro_micro 7 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
            ;

    };

};


    &pinctrl {
        spi1_default: spi1_default {
          group1 {
            psels = <NRF_PSEL(SPIM_SCK, 0, 20)>,
              <NRF_PSEL(SPIM_MOSI, 0, 17)>,
              <NRF_PSEL(SPIM_MISO, 0, 25)>;
          };
        };
        spi1_sleep: spi1_sleep {
          group1 {
            psels = <NRF_PSEL(SPIM_SCK, 0, 20)>,
              <NRF_PSEL(SPIM_MOSI, 0, 17)>,
              <NRF_PSEL(SPIM_MISO, 0, 25)>;
            low-power-enable;
          };
        };
        
        i2c0_default: i2c0_default {
          group1 {
            psels = <NRF_PSEL(TWIM_SDA, 0, 17)>,
                <NRF_PSEL(TWIM_SCL, 0, 20)>;
          };
        };
      
        i2c0_sleep: i2c0_sleep {
          group1 {
            psels = <NRF_PSEL(TWIM_SDA, 0, 17)>,
                <NRF_PSEL(TWIM_SCL, 0, 20)>;
            low-power-enable;
          };
        };
      };
      
      
      &i2c0 {
          status = "okay";
          glidepoint0: glidepoint@2a {
              compatible = "cirque,pinnacle";
              reg = <0x2a>;
              status = "okay";
              dr-gpios = <&gpio1 2 (GPIO_ACTIVE_HIGH)>;
      
              sensitivity = "1x";
              sleep;
              no-taps;
              absolute-mode;
          };
      
      };
      
      nice_view_pins: &spi1 {
        status = "disabled";
        compatible = "nordic,nrf-spim";
        pinctrl-0 = <&spi1_default>;
        pinctrl-1 = <&spi1_sleep>;
        pinctrl-names = "default", "sleep";
        cs-gpios = <&gpio0 6 GPIO_ACTIVE_HIGH>;
      
        nice_view: ls0xx@0 {
          status = "disabled";
          compatible = "sharp,ls0xx";
          spi-max-frequency = <1000000>;
          reg = <0>;
          width = <160>;
          height = <68>;
        };
      };
      
      / {
          input_processors {
              scroll_scaler: zip_scroll_scaler {
                  compatible = "zmk,input-processor-scaler";
                  #input-processor-cells = <2>;
                  type = <INPUT_EV_REL>;
                  codes = <INPUT_REL_WHEEL>;
                  track-remainders;
              };
          };
      };
      
      &zip_gestures {
          tap-detection;
          prevent_movement_during_tap;
          circular-scroll;
          circular-scroll-rim-percent=<10>;
      };
      
      
      / {
           /* assign `input-listener` to all pointing devices */
           /* &glidepoint0 on central, &glidepoint1 on peripheral */
           tpad_central_listener {
               compatible = "zmk,input-listener";
               device = <&glidepoint0>;
               // xy-swap;
           };
       
           tpad_peripheral_listener {
               compatible = "zmk,input-listener";
               device = <&glidepoint1>;
                  input-processors = <
                  &zip_gestures
                  &zip_absolute_to_relative
                  &zip_temp_layer 3 100
                  &zip_scroll_scaler 1 10
                  >;
              // xy-swap;
              // x-invert;
           };
       };